C# 에서 using 키워드는 namespace를 포함시킬때 사용하기도 하지만
안전한 리소스 해제를 위해서 사용하기도 한다.

예를 들어 
파일 입출력 관련 객체를 생성하고 실행하면 다음과 같이 반드시 Close를 호출하여 메모리 해제를 해줘야 한다.

StreamWriter sw = new StreamWriter("a.txt");
sw.WriteLine("Hello World!");
sw.Close();

하지만 이런 방식은 예외가 발생할 경우 Close가 제데로 호출되지 않을 수 도 있다.
그래서 try-finally을 사용해 Close를 호출하는 방법이 있다.

StreamWriter sw = new StreamWriter("a.txt");
try
{
   sw.WriteLine("Hello World!");
}
finally
{
  sw.Close();
}

이렇게 하면 Close()를 반드시 실행 할 수 있다.
하지만 C#에서는 using을 사용하여 더 쉽게 코드를 짤 수 있다.

using(StreamWriter sw = new StreamWriter("a.txt"))
{
  sw.WriteLine("Hello World!");
}

C# 8.0 부터는 코드불록이 아닌 한줄로 표현 할 수도 있다.

using StreamWriter sw = new StreamWriter("a.txt");

sw.WriteLine("Hello World!");

이렇게 구현할 수 있다.
원리는 IDispose인터페이스를 구현한 클래스에 using 키워드를 사용하여 코드를 짜면
Dispose()메소드가 호출되어 메모리를 해제하는 코드를 실행시키는 것이다.


using의 다른 사용 예

using MyNamespace;//네임스페이스 포함시키기
using MNS = MyNamespace;//별칭
using static Printer;//Static클래스 명시
