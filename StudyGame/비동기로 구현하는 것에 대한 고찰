현시대의 대부분의 게임은 실시간 동작 방식이고
실시간으로 동작하려면 동시에 여러 정보를 처리할 수 있어야 한다.
그말은 즉 비동기로 구현해야하는 기능이 많다는 것이다.
물론 대표적인 게임엔진인 유니티나 언리얼은 기본적으로 각각의 객체가 각자 동시에 작동하도록 되어있다.
내가 직접 비동기 작동방식을 구현할일은 거의 없다는 것이다.
하지만 지금은 군대에 있기 때문에(현재 2021.11.11 내일 휴가간다!) 그런 고오급 게임엔진을 사용할수가 없다.
그래서 콘솔을 통해 텍스트 알피지를 구현하는 중에 비동기를 사용해야할 일이 생겼다.
C#의 Task를 활용한 비동기를 공부하고 구현하던 도중 난해함을 많이 느꼈다.
비동기 방식이 내가 원하는대로 구현하기 쉽지 않았다.
예를 들어 background에서 작동하는 타이머를 구현한다고 하면. 
타이머 시작,정지,화면 출력 등을 처리해야 하는데, 이것을 원하는 타이밍에 멈추고 시작하고 하기위해 많은 양의 glober변수를 쓰게 된다.
(ex timerStart,timerEnd)
그리고 하다하다 결국 원하는 타이밍마다 timerStart가 false일때 타이머를 시작하는 TimerStart메소드를 호출했는데,
이것이 과연 효율적인 방식일까 의문이 드는 것이다.
그리고 타이머에서 시간을 재는 부분과 출력을 하는 부분을 한 메소드에서 구현하면 많이 불안정한 모습을 보여
둘이 계산과 출력을 각각 메소드로 구현하여 한 변수에 참조하게 하였는데, 원래도 이런 방식을 선호할까? 라는 의문이 들었다.
내가 후에 실무나 더 많은 경험을 쌓게 되면 자연스럽게 알 수 있을것 같기도 하지만 현재는 의문을 해소할 방법이 마땅치 않은것같다.
