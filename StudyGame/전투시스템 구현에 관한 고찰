게임의 전투시스템은 게임의 장르에 따라 다양하게 구현된다.
크게는 턴제 방식과 실시간 방식으로 나눌 수 있는데
턴제는 포켓몬또는 카드게임과 같은 종류를 예로 들 수 있고
실시간 방식은 스타크래프트,롤,메이플스토리 같이 이 시대의 게임의 주류를 이루고 있다.
아무래도 턴제 방식보다 실시간 방식이 더욱 능동적으로 플래이어가 게임을 주도할 수 있다보니 실시간 방식이 더 재미있는 건 어쩔 수 없는것 같다.
물론 장르에 따라서 턴제 방식이 더 어울리는 게임도 있고 턴제 방식과 실시간방식을 적당히 섞어 두 방식의 장점을 적절히 사용하는 게임도 있다.

지금 군대에서 개발하고 있는 TextRPG에 경우에는 턴제 방식을 취하고 있다.
개발중에 고민되는 부분이 있는데
턴제 방식의 전투를 좀더 다이나믹하고 재미있게 구현하기위해
전투하는 두 객체의 능력치에 따라 공격,방어,회피의 반응 메세지를 다양화 하고 있다.
그런데 두 객체의 능력치 정보를 교환하는 과정이 생각보다 복잡하게 구현되었다.
현재는 Choice중 attackPhase초이스로 넘어가게 되면
GameSystem의 Attacking(Attacker,Defender)메소드를 호출하고 
Attacker의 Attack()메소드를 호출해 공격자의 공격 정보를 AttackInfo객체에 담아 반환하고
Defender의 Damage(AttackInfo)를 호출하여 공격정보를 넘겨주어 각 객체의 계산식으로 데미지를 계산하여 
Defender의 필드 값(HP등)에 적용하고
Player의 AttackCry()메소드를 호출해 attackPhase초이스의 텍스트 값을 변경하여 화면에 띄운다.
그다음 reactionPhase로 넘어가 monster.Reaction()을 호출해 
플레이어의 공격력과 몬스터의 HP최대값에 따라 반응을 달라지게 구현하려 하였다.
그런데 반응을 달라지게 하려면 공격정보를 받아와야 하는데 언제 받아오는게 제일 좋을까? 라는 고민이였다.

항상 이렇게 복잡하게 구현되면 이게 맞나? 생각이 들지만 글로 정리하다보니 이렇게 하면 좋을 것 같다.
어짜피 공격에 대한 반응은 Damage()메소드가 호출 되었을때에 하면 되니 Damage()메소드를 통해 AttackInfo를 받을때
그 AttackInfo를 저장해 두고 Reaction()에 반영해야겠다.
